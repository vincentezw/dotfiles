"$schema" = 'https://starship.rs/config-schema.json'
format = """
[](color_blue)\
$os\
$hostname\
[ ](fg:color_blue)\
$git_branch\
$custom\
$git_state\
$directory\
(fg:color_blue)\
$line_break$character"""
right_format = """
$cmd_duration\
$rust\
$golang\
$ruby\
$nodejs"""

continuation_prompt = ' '
palette = 'gruvbox_dark'

[palettes.gruvbox_dark]
color_fg0 = '#fbf1c7'
color_fg1 = '#CE27BD'
color_fg2 = '#111111'
color_bg1 = '#3c3836'
color_bg3 = '#665c54'
color_bg4 = '#2c3e50'
color_blue = '#81A9F8'
color_aqua = '#06a4c7'
color_green = '#82C257'
color_orange = '#d65d0e'
color_purple = '#b16286'
color_red = '#cc241d'
color_yellow = '#d79921'

[custom.git_status]
command = '''
git_status=$(git status --porcelain)
# Untracked or Deleted (unstaged) files - Red
if echo ${git_status} | grep -qe '^?? ' -e '^[MARCDU ]D ' -e '^D[ UM]'; then
    echo -n $'\e[31m󰝥'
fi

# Modified (unstaged) and Renamed files - Yellow
if echo ${git_status} | grep -qe '^[ MARC]M ' -e '^R[ MD] '; then
    echo -n $'\e[33m󰝥'
fi

# Staged files (including Deleted) - Green
if echo ${git_status} | grep -qe '^A[ MDAU] ' -e '^M[ MD] ' -e '^UA' -e '^D '; then
    echo -n $'\e[32m󰝥'
fi
'''
when = 'git rev-parse --is-inside-work-tree >/dev/null 2>&1'
format = '($output )'

[character]
success_symbol = "[❯](bold green)"
error_symbol = "[❯](bold red)"

[cmd_duration]
format = "[󰅐 $duration ](fg:color_green)"
# [custom.vincent]
# command = '''
# if [ "$STARSHIP_SHELL" = "bash" ]; then
#     echo -n "$(fc -ln -0)"
# elif [ "$STARSHIP_SHELL" = "zsh" ]; then
#     echo -n "$(fc -ln -m '*')"
# fi
# echo "yo"
# '''
# when = '[[ -n "$FC_CMD_DURATION" ]]'
# format = "[󰅐 $output ](fg:color_green)"

[os]
disabled = false
style = "bg:color_blue fg:color_fg2"

[os.symbols]
Windows = "󰍲"
Ubuntu = "󰕈"
Raspbian = "󰐿"
Macos = "󰀵"
Linux = "󰌽"
Gentoo = "󰣨"
Fedora = "󰣛"
Alpine = ""
Android = ""
Arch = "󰣇"
Debian = "󰣚"
Redhat = "󱄛"
RedHatEnterprise = "󱄛"

[hostname]
style = "bg:color_blue fg:color_fg2"
ssh_only = false
format = '[ $hostname ]($style)'
disabled = false

[directory]
style = "fg:color_fg0"
format = "  [](color_fg1) [ $path ]($style)"
truncation_length = 4
truncation_symbol = "…/"

[directory.substitutions]
"Desktop" = "󰧨a "
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = "󰝚 "
"Pictures" = " "
"Developer" = "󰲋 "
"src" = "󰲋 "

[git_branch]
symbol = ""
style = "fg:color_fg0"
format = '[ [$symbol](color_fg1) $branch ]($style)'

[git_state]
format = '[\($state( $progress_current of $progress_total)\)]($style) '
cherry_pick = '[ Cherry](red)'
rebase = '[󱓎 Rebase](red)'
bisect = '[󰮗 Bisecting](red)'
merge = '[ Merging](red)'
revert = '[ Reverting](red)'

[nodejs]
symbol = ""
style = "bg:color_bg4"
format = """
[](color_bg4)\
[$symbol( $version)](fg:color_aqua bg:color_bg4)\
[ ](color_bg4)\
($style)
"""

[rust]
symbol = ""
style = "bg:color_blue"
format = """
[](color_bg4)\
[$symbol( $version)](fg:color_aqua bg:color_bg4)\
[ ](color_bg4)\
($style)
"""

[ruby]
symbol = ""
style = "bg:color_blue"
format = """
[](color_bg4)\
[$symbol( $version)](fg:color_aqua bg:color_bg4)\
[ ](color_bg4)\
($style)
"""

[golang]
symbol = ""
style = "bg:color_blue"
format = """
[](color_bg4)\
[$symbol( $version)](fg:color_aqua bg:color_bg4)\
[ ](color_bg4)\
($style)
"""


[python]
symbol = ""
style = "bg:color_blue"
format = '[[ $symbol( $version) ](fg:color_fg0 bg:color_blue)]($style)'

[docker_context]
symbol = ""
style = "bg:color_bg3"
format = '[[ $symbol( $context) ](fg:#83a598 bg:color_bg3)]($style)'

[time]
disabled = false
